@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix :      <https://github.com/oxigraph/oxigraph/tests/sparql/manifest#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix mf:    <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix qt:    <http://www.w3.org/2001/sw/DataAccess/tests/test-query#> .

<>  rdf:type mf:Manifest ;
    rdfs:label "Oxigraph SPARQL tests" ;
    mf:entries
    (
    :describe
    :describe_where
    :group_concat_with_null
    :single_not_exists
    :property_list_path
    :values_in_filter_exists
    :values_in_filter_not_exists
    :subquery_in_filter_not_exists
    ) .

:describe rdf:type mf:QueryEvaluationTest ;
    mf:name "Simple DESCRIBE request" ;
    mf:action
         [ qt:query  <describe.rq> ;
           qt:data   <describe_input.ttl> ] ;
    mf:result  <describe_output.ttl> .

:describe_where rdf:type mf:QueryEvaluationTest ;
    mf:name "Simple DESCRIBE request" ;
    mf:action
         [ qt:query  <describe_where.rq> ;
           qt:data   <describe_input.ttl> ] ;
    mf:result  <describe_output.ttl> .

:group_concat_with_null rdf:type mf:QueryEvaluationTest ;
    mf:name "GROUP_CONCAT with NULL" ;
    rdfs:comment    "GROUP_CONCAT should ignore null values" ;
    mf:action
         [ qt:query  <group_concat_with_null.rq> ;
           qt:data   <group_concat_with_null.ttl> ] ;
    mf:result  <group_concat_with_null.srx> .

:single_not_exists rdf:type mf:QueryEvaluationTest ;
    mf:name "query with only a FILTER NOT EXISTS" ;
    mf:action
         [ qt:query  <single_not_exists.rq> ;
           qt:data   <describe_input.ttl> ] ;
    mf:result  <single_not_exists.srx> .

:property_list_path rdf:type mf:PositiveSyntaxTest ;
    mf:name "PropertyListPathNotEmpty children should be ObjectListPath for consistency" ;
    mf:action <property_list_path.rq> .

:values_in_filter_exists rdf:type mf:QueryEvaluationTest ;
    mf:name "VALUES inside of FILTER EXISTS" ;
    mf:action [ qt:query <values_in_filter_exists.rq> ] ;
    mf:result <values_in_filter_exists.srx> .

:values_in_filter_not_exists rdf:type mf:QueryEvaluationTest ;
    mf:name "VALUES inside of FILTER EXISTS" ;
    mf:action [ qt:query <values_in_filter_not_exists.rq> ] ;
    mf:result <values_in_filter_exists.srx> .

:subquery_in_filter_not_exists rdf:type mf:QueryEvaluationTest ;
    mf:name "VALUES inside of FILTER EXISTS" ;
    mf:action [ qt:query <subquery_in_filter_not_exists.rq> ] ;
    mf:result <values_in_filter_exists.srx> .
